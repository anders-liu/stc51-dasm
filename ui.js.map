{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactRedux\"","webpack:///./src/ui/scripts/store/actions.ts","webpack:///./src/shared/utilities.ts","webpack:///external \"Redux\"","webpack:///./src/ui/scripts/store/selectors.ts","webpack:///./src/ui/scripts/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/ui/scripts/store/reducers.ts","webpack:///./src/ui/scripts/components/app.tsx","webpack:///./src/ui/scripts/components/page-header.tsx","webpack:///./src/ui/scripts/components/page-content.tsx","webpack:///./src/ui/scripts/components/file-opener.tsx","webpack:///./src/ui/scripts/components/hex-view.tsx","webpack:///./src/ui/scripts/components/data-bytes-view.tsx","webpack:///./src/ui/scripts/components/asm-view.tsx","webpack:///./src/ui/scripts/components/page-footer.tsx","webpack:///./src/ui/scripts/store/action-listener.ts","webpack:///./src/ui/scripts/worker-client.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactRedux","createOpenFileAction","file","type","createSetWorkerStatusAction","progress","error","createSetHexAction","hex","createSetDataBytesAction","data","createSetAsmAction","asm","createJumpToAsmLabelAction","label","formatHex","len","suffix","str","toString","toUpperCase","length","repeat","formatU1Hex","formatU2Hex","formatCodeAddress","addr","formatDirectData","formatBitData","formatImmediateData","formatImmediateData2","Redux","isWorkerBusy","state","workerStatus","getTotalBytes","hexView","totalBytes","ReactDOM","packageJson","R","app_1","action_listener_1","worker_client_1","appInfo","title","version","author","homepage","bugsUrl","bugs_url","releaseNotesUrl","release_notes","buildTimeLocal","Date","parse","build_time","toLocaleString","year","getFullYear","pageId","document","location","search","defaultState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","appReducer","applyMiddleware","actionListenerMiddleware","workerClientMiddleware","initWorkerClient","render","createElement","Provider","App","getElementById","combineReducers","action","fileInfo","name_1","size","assign","_a","dataBytesView","asmView","page_header_1","page_content_1","page_footer_1","_super","__extends","Fragment","PageHeader","PageContent","PageFooter","Component","PageHeaderClass","this","props","id","connect","file_opener_1","hex_view_1","data_bytes_view_1","asm_view_1","PageContentClass","pageContent","renderMainPageContent","renderDonatePageContent","showDonationPrompt","FileOpener","AsmView","DataBytesView","HexView","src","A","selectors_1","FileOpenerClass","_this","fileSelected","fileInput","createRef","handleFileInputChange","handleGoButtonClick","htmlFor","ref","accept","onChange","onClick","disabled","canGo","hasSelectedFile","current","files","setState","onOpenFile","dispatch","U","HexViewClass","className","renderHexLines","rows","push","renderHexLine","line","text","number","count","address","map","v","checkSum","colSpan","SL","DataBytesViewClass","renderHeaderRow","renderDataRows","cells","renderAddressHeader","a","db","BYTES_PER_LINE","AsmViewClass","renderAsmErrors","renderAsmRows","errors","lastInst","ci","isGap","renderSeparatorRow","renderGapRow","isDb","isAbsJump","renderLabelRow","renderDbRow","isCall","isCondJump","jumpSource","isIntEntry","renderTextRow","renderInstRow","renderDataBytes","bytes","opcode","renderOprands","isHard","spans","oprand1","renderOprandSpan","oprand2","oprand3","oprand","onJumpToAsmLabel","getOprandStr","isAddr","undefined","PageFooterClass","showDonate","href","replace","target","next","getState","elem","scrollIntoView","addEventListener","evt","confirm","preventDefault","returnValue","_worker","_store","Worker","onmessage","ev","msg","handleProgressMessage","handleHexMessage","handleDataBytesMessage","handleAsmMessage","handleMessage","postMessage","postOpenFileMessage"],"mappings":"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","file":"ui.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = React;","module.exports = ReactRedux;","import * as Redux from \"redux\";\r\nimport * as SH from \"../../../shared/schemas\";\r\nimport * as WM from \"../../../shared/worker-message\";\r\n\r\nexport type ActionType\r\n    = \"OPEN_FILE\"\r\n    | \"SET_WORKER_STATUS\"\r\n    | \"SET_HEX\"\r\n    | \"SET_DATA_BYTES\"\r\n    | \"SET_ASM\"\r\n    | \"JUMP_TO_ASM_LABEL\"\r\n    ;\r\n\r\nexport interface OpenFileAction extends Redux.Action {\r\n    file: File;\r\n}\r\n\r\nexport function createOpenFileAction(file: File): OpenFileAction {\r\n    return { type: \"OPEN_FILE\", file };\r\n}\r\n\r\nexport interface SetWorkerStatusAction extends Redux.Action {\r\n    progress: WM.ProgressType;\r\n    error?: string;\r\n}\r\n\r\nexport function createSetWorkerStatusAction(\r\n    progress: WM.ProgressType,\r\n    error?: string): SetWorkerStatusAction {\r\n    return { type: \"SET_WORKER_STATUS\", progress, error };\r\n}\r\n\r\nexport interface SetHexAction extends Redux.Action {\r\n    hex: SH.HexLineList;\r\n}\r\n\r\nexport function createSetHexAction(hex: SH.HexLineList): SetHexAction {\r\n    return { type: \"SET_HEX\", hex };\r\n}\r\n\r\nexport interface SetDataBytesAction extends Redux.Action {\r\n    data: SH.DataByteList;\r\n}\r\n\r\nexport function createSetDataBytesAction(data: SH.DataByteList): SetDataBytesAction {\r\n    return { type: \"SET_DATA_BYTES\", data };\r\n}\r\n\r\nexport interface SetAsmAction extends Redux.Action {\r\n    asm: SH.AsmList;\r\n}\r\n\r\nexport function createSetAsmAction(asm: SH.AsmList): SetAsmAction {\r\n    return { type: \"SET_ASM\", asm };\r\n}\r\n\r\nexport interface JumpToAsmLabelAction extends Redux.Action {\r\n    label: string;\r\n}\r\n\r\nexport function createJumpToAsmLabelAction(label: string):JumpToAsmLabelAction {\r\n    return { type: \"JUMP_TO_ASM_LABEL\", label };\r\n}\r\n","export function formatHex(n: number, len: number, suffix?: boolean): string {\r\n    let str = n.toString(16).toUpperCase();\r\n    if (str.length < len) {\r\n        str = \"0\".repeat(len - str.length) + str;\r\n    }\r\n    if (suffix) {\r\n        str = str + \"h\";\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function formatU1Hex(n: number, suffix?: boolean): string {\r\n    return formatHex(n, 2, suffix);\r\n}\r\n\r\nexport function formatU2Hex(n: number, suffix?: boolean): string {\r\n    return formatHex(n, 4, suffix);\r\n}\r\n\r\nexport function formatCodeAddress(addr: number): string {\r\n    return \"CODE_\" + formatHex(addr, 4);\r\n}\r\n\r\nexport function formatDirectData(data: number): string {\r\n    return formatHex(data, 3, true);\r\n}\r\n\r\nexport function formatBitData(data: number): string {\r\n    return formatHex(data, 3, true);\r\n}\r\n\r\nexport function formatImmediateData(data: number): string {\r\n    return \"#\" + formatHex(data, 3, true);\r\n}\r\n\r\nexport function formatImmediateData2(data: number): string {\r\n    return \"#\" + formatHex(data, 5, true);\r\n}","module.exports = Redux;","import * as S from \"./state\";\r\n\r\nexport function isWorkerBusy(state: S.AppState): boolean {\r\n    const workerStatus = state && state.workerStatus;\r\n    if (!workerStatus) return false;\r\n\r\n    const { progress } = workerStatus;\r\n    return !(progress === \"ERROR\" || progress === \"DONE\");\r\n}\r\n\r\nexport function getTotalBytes(state: S.AppState): number {\r\n    const hexView = state && state.hexView;\r\n    if (!hexView) return 0;\r\n\r\n    return hexView.hex.totalBytes;\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as Redux from \"redux\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as packageJson from \"package.json\";\r\nimport * as S from \"./store/state\";\r\nimport * as R from \"./store/reducers\";\r\nimport { App } from \"./components/app\";\r\nimport { actionListenerMiddleware } from \"./store/action-listener\";\r\nimport { workerClientMiddleware, initWorkerClient } from \"./worker-client\";\r\n\r\nconst appInfo: S.AppInfo = {\r\n    title: packageJson.title,\r\n    version: packageJson.version,\r\n    author: packageJson.author,\r\n    homepage: packageJson.homepage,\r\n    bugsUrl: packageJson.bugs_url,\r\n    releaseNotesUrl: packageJson.release_notes,\r\n    buildTimeLocal: new Date(Date.parse(packageJson.build_time)).toLocaleString(),\r\n    year: new Date().getFullYear().toString(),\r\n    pageId: document.location.search === \"?donate\" ? \"DONATE\" : \"MAIN\"\r\n};\r\n\r\nconst defaultState: S.AppState = {\r\n    appInfo,\r\n};\r\n\r\ndocument.title = `${appInfo.title}`;\r\n\r\nconst _w = window as any;\r\nconst composeEnhancers = _w.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\r\nconst store = Redux.createStore(R.appReducer, defaultState, composeEnhancers(\r\n    Redux.applyMiddleware(\r\n        actionListenerMiddleware,\r\n        workerClientMiddleware)\r\n));\r\n\r\nif (appInfo.pageId === \"MAIN\") {\r\n    initWorkerClient(store);\r\n}\r\n\r\nReactDOM.render(\r\n    <ReactRedux.Provider store={store}>\r\n        <App />\r\n    </ReactRedux.Provider>,\r\n    document.getElementById(\"app\")\r\n);","module.exports = ReactDOM;","import * as Redux from \"redux\";\r\nimport * as A from \"./actions\";\r\nimport * as S from \"./state\";\r\n\r\nexport const appReducer = Redux.combineReducers({\r\n    appInfo,\r\n    fileInfo,\r\n    workerStatus,\r\n    hexView,\r\n    dataBytesView,\r\n    asmView,\r\n}) as Redux.Reducer<S.AppState>;\r\n\r\nfunction appInfo(state: S.AppInfo | null = null, action: Redux.Action): S.AppInfo | null {\r\n    return state;\r\n}\r\n\r\nfunction fileInfo(state: S.FileInfo | null = null, action: Redux.Action): S.FileInfo | null {\r\n    switch (action.type) {\r\n        case \"OPEN_FILE\": {\r\n            const { file } = action as A.OpenFileAction;\r\n            const { name, size } = file;\r\n            return Object.assign({}, state, { name, size });\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction workerStatus(state: S.WorkerStatus | null = null, action: Redux.Action): S.WorkerStatus | null {\r\n    switch (action.type) {\r\n        case \"SET_WORKER_STATUS\": {\r\n            const { progress, error } = action as A.SetWorkerStatusAction;\r\n            return Object.assign({}, state, { progress, error });\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction hexView(state: S.HexView | null = null, action: Redux.Action): S.HexView | null {\r\n    switch (action.type) {\r\n        case \"SET_HEX\": {\r\n            const { hex } = action as A.SetHexAction;\r\n            return Object.assign({}, state, { hex });\r\n        }\r\n        case \"OPEN_FILE\": {\r\n            // 新开文件的时候，清空HEX视图\r\n            return null;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction dataBytesView(state: S.DataBytesView | null = null, action: Redux.Action): S.DataBytesView | null {\r\n    switch (action.type) {\r\n        case \"SET_DATA_BYTES\": {\r\n            const { data } = action as A.SetDataBytesAction;\r\n            return Object.assign({}, state, { data });\r\n        }\r\n        case \"OPEN_FILE\": {\r\n            // 新开文件的时候，清空字节数据视图\r\n            return null;\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction asmView(state: S.AsmView | null = null, action: Redux.Action): S.AsmView | null {\r\n    switch (action.type) {\r\n        case \"SET_ASM\": {\r\n            const { asm } = action as A.SetAsmAction;\r\n            return Object.assign({}, state, { asm });\r\n        }\r\n        case \"OPEN_FILE\": {\r\n            // 新开文件的时候，清空汇编指令视图\r\n            return null;\r\n        }\r\n        default: return state;\r\n    }\r\n}","import * as React from \"react\";\r\n\r\nimport { PageHeader } from \"./page-header\";\r\nimport { PageContent } from \"./page-content\";\r\nimport { PageFooter } from \"./page-footer\";\r\n\r\nexport class App extends React.Component {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <PageHeader />\r\n                <PageContent />\r\n                <PageFooter />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as S from \"../store/state\";\r\n\r\ninterface ConnectedProps {\r\n    appInfo: S.AppInfo;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { appInfo } = state;\r\n    return { appInfo };\r\n}\r\n\r\nclass PageHeaderClass extends React.Component<ConnectedProps> {\r\n    public render(): JSX.Element {\r\n        const { appInfo } = this.props;\r\n        return (\r\n            <header id=\"app-header\">\r\n                <h1>{appInfo.title}</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PageHeader = ReactRedux.connect(mapStateToProps)(PageHeaderClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as S from \"../store/state\";\r\nimport { FileOpener } from \"./file-opener\";\r\nimport { HexView } from \"./hex-view\";\r\nimport { DataBytesView } from \"./data-bytes-view\";\r\nimport { AsmView } from \"./asm-view\";\r\n\r\ninterface ConnectedProps {\r\n    pageId: S.PageIdType;\r\n    showDonationPrompt: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { hexView } = state;\r\n    const { pageId } = state.appInfo;\r\n\r\n    return {\r\n        pageId,\r\n        showDonationPrompt: hexView == null\r\n    };\r\n}\r\n\r\nclass PageContentClass extends React.Component<ConnectedProps> {\r\n    public render(): JSX.Element {\r\n        const { pageId } = this.props;\r\n\r\n        let pageContent: JSX.Element | null = null;\r\n        switch (pageId) {\r\n            case \"MAIN\": pageContent = this.renderMainPageContent(); break;\r\n            case \"DONATE\": pageContent = this.renderDonatePageContent(); break;\r\n        }\r\n\r\n        return (\r\n            <section id=\"app-content\">\r\n                {pageContent}\r\n            </section>\r\n        );\r\n    }\r\n\r\n    public renderMainPageContent(): JSX.Element {\r\n        const { showDonationPrompt } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <FileOpener />\r\n                <section id=\"view-container\">\r\n                    <AsmView />\r\n                    <DataBytesView />\r\n                    <HexView />\r\n                </section>\r\n                {showDonationPrompt && (\r\n                    <div id=\"donation-prompt\">\r\n                        {\"如果这个应用对您有所帮助，欢迎采取资助的方式进行鼓励 (｡◕‿◕｡) ↓\"}\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private renderDonatePageContent(): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <h2>资助作者</h2>\r\n                <p>这个小工具能对您有所帮助，是作者的荣幸。对于您的资助，作者表示万分感激！</p>\r\n                <table>\r\n                    <thead>\r\n                        <tr><th>微信</th><th>支付宝</th></tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td><img src=\"donate-wechat.jpg\" /></td><td><img src=\"donate-alipay.jpg\" /></td></tr>\r\n                    </tbody>\r\n                </table>\r\n                <p>如有兴致，请在备注/留言中注明用于资助STC51反汇编器。</p>\r\n                <p>另外，作者计划不定期在此页面列出资助者以示感谢，如果您做好事不想留名，或希望留一个别致的名号，也请在留言/备注中告知；作者默认列出收款信息中看到的名字。</p>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport const PageContent = ReactRedux.connect(mapStateToProps)(PageContentClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as A from \"../store/actions\";\r\nimport * as S from \"../store/state\";\r\n\r\nimport { isWorkerBusy } from \"../store/selectors\";\r\n\r\ninterface ConnectedProps {\r\n    isWorkerBusy: boolean;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    return {\r\n        isWorkerBusy: isWorkerBusy(state)\r\n    };\r\n}\r\n\r\ninterface ConnectedEvents {\r\n    onOpenFile: (file: File) => void;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: ReactRedux.Dispatch<S.AppState>): ConnectedEvents {\r\n    return {\r\n        onOpenFile: (file) => dispatch(A.createOpenFileAction(file))\r\n    };\r\n}\r\n\r\ninterface State {\r\n    fileSelected: boolean;\r\n}\r\n\r\nclass FileOpenerClass extends React.Component<ConnectedProps & ConnectedEvents, State> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            fileSelected: false\r\n        };\r\n        this.fileInput = React.createRef();\r\n        this.handleFileInputChange = this.handleFileInputChange.bind(this);\r\n        this.handleGoButtonClick = this.handleGoButtonClick.bind(this);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"file-opener\">\r\n                <label htmlFor=\"file-input\">选择HEX文件：</label>\r\n                <input id=\"file-input\"\r\n                    ref={this.fileInput}\r\n                    type=\"file\" accept=\".hex\"\r\n                    onChange={this.handleFileInputChange}></input>\r\n                <button onClick={this.handleGoButtonClick} disabled={!this.canGo()}>走起</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private hasSelectedFile(): boolean {\r\n        return (this.fileInput\r\n            && this.fileInput.current\r\n            && this.fileInput.current.files\r\n            && this.fileInput.current.files[0])\r\n            != null;\r\n    }\r\n\r\n    private canGo(): boolean {\r\n        const { isWorkerBusy } = this.props;\r\n        const { fileSelected } = this.state;\r\n        return !isWorkerBusy && fileSelected;\r\n    }\r\n\r\n    private handleFileInputChange(): void {\r\n        this.setState({\r\n            fileSelected: this.hasSelectedFile()\r\n        });\r\n    }\r\n\r\n    private handleGoButtonClick(): void {\r\n        if (this.canGo()) {\r\n            this.props.onOpenFile(this.fileInput!.current!.files![0]);\r\n        }\r\n    }\r\n\r\n    private fileInput: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\nexport const FileOpener = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(FileOpenerClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as S from \"../store/state\";\r\nimport * as U from \"../../../shared/utilities\";\r\nimport * as SH from \"../../../shared/schemas\";\r\n\r\ninterface ConnectedProps {\r\n    hexView?: S.HexView;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { hexView } = state;\r\n    return {\r\n        hexView\r\n    };\r\n}\r\n\r\nclass HexViewClass extends React.Component<ConnectedProps> {\r\n    public render(): JSX.Element | null {\r\n        const { hexView } = this.props;\r\n        if (!hexView) return null;\r\n\r\n        return (\r\n            <div id=\"hex-view\">\r\n                <h2>HEX文件内容</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"table-header-v\">行<br />号</th>\r\n                            <th className=\"table-header-v\">起<br />始<br />标<br />记</th>\r\n                            <th className=\"table-header-v\">字<br />节<br />数</th>\r\n                            <th className=\"table-header-v\">地址</th>\r\n                            <th className=\"table-header-v\">类<br />型</th>\r\n                            <th className=\"table-header-v\">数据</th>\r\n                            <th className=\"table-header-v\">校<br />验<br />和</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderHexLines(hexView.hex)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderHexLines(hex: SH.HexLineList): JSX.Element[] {\r\n        let rows: JSX.Element[] = [];\r\n        for (let key in hex) {\r\n            rows.push(this.renderHexLine(hex[key]));\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    private renderHexLine(line: SH.HexLine): JSX.Element {\r\n        if (line.text) {\r\n            return (\r\n                <tr className=\"code\">\r\n                    <td className=\"table-header-h hex-line-number\">{line.number}</td>\r\n                    <td className=\"table-header-h hex-start\">:</td>\r\n                    <td className=\"hex-count\">{line.count!.str}</td>\r\n                    <td className=\"hex-address\">{line.address!.str}</td>\r\n                    <td className=\"hex-type\">{line.type!.str}</td>\r\n                    <td className=\"hex-data\">{line.data!.value.map(v => (\r\n                        <span>{U.formatU1Hex(v)}</span>\r\n                    ))}</td>\r\n                    <td className=\"hex-checksum\">{line.checkSum!.str}</td>\r\n                    <td className={line.error ? \"hex-error\" : \"\"}>\r\n                        {line.error ? line.error : \"\"}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return (\r\n                <tr className=\"code\">\r\n                    <td className=\"table-header-h hex-line-number\">{line.number}</td>\r\n                    <td colSpan={6}></td>\r\n                    <td className={line.error ? \"hex-error\" : \"\"}>\r\n                    </td>\r\n                </tr >\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const HexView = ReactRedux.connect(mapStateToProps)(HexViewClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as S from \"../store/state\";\r\nimport * as SL from \"../store/selectors\";\r\nimport * as U from \"../../../shared/utilities\";\r\nimport * as SH from \"../../../shared/schemas\";\r\n\r\ninterface ConnectedProps {\r\n    dataBytesView?: S.DataBytesView;\r\n    totalBytes: number;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { dataBytesView } = state;\r\n    const totalBytes = SL.getTotalBytes(state);\r\n    return {\r\n        dataBytesView,\r\n        totalBytes\r\n    };\r\n}\r\n\r\nclass DataBytesViewClass extends React.Component<ConnectedProps> {\r\n    public render(): JSX.Element | null {\r\n        const { dataBytesView } = this.props;\r\n        if (!dataBytesView) return null;\r\n\r\n        return (\r\n            <div id=\"db-view\">\r\n                <h2>字节数据</h2>\r\n                <table>\r\n                    <thead>\r\n                        {this.renderHeaderRow()}\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderDataRows()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderHeaderRow(): JSX.Element {\r\n        return (\r\n            <tr className=\"code\">\r\n                <th className=\"table-header-v\">地址</th>\r\n                <th className=\"table-header-v\">+0</th>\r\n                <th className=\"table-header-v\">+1</th>\r\n                <th className=\"table-header-v\">+2</th>\r\n                <th className=\"table-header-v\">+3</th>\r\n                <th className=\"table-header-v\">+4</th>\r\n                <th className=\"table-header-v\">+5</th>\r\n                <th className=\"table-header-v\">+6</th>\r\n                <th className=\"table-header-v\">+7</th>\r\n                <th className=\"table-header-v\">+8</th>\r\n                <th className=\"table-header-v\">+9</th>\r\n                <th className=\"table-header-v\">+A</th>\r\n                <th className=\"table-header-v\">+B</th>\r\n                <th className=\"table-header-v\">+C</th>\r\n                <th className=\"table-header-v\">+D</th>\r\n                <th className=\"table-header-v\">+E</th>\r\n                <th className=\"table-header-v\">+F</th>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    private renderDataRows(): JSX.Element[] {\r\n        const { dataBytesView, totalBytes } = this.props;\r\n        const { data } = dataBytesView!;\r\n\r\n        let rows: JSX.Element[] = [];\r\n        let cells: JSX.Element[] = [this.renderAddressHeader(0)];\r\n\r\n        for (let a = 0; a < totalBytes; a++) {\r\n            if (a > 0 && a % 16 === 0) {\r\n                rows.push(<tr className=\"code\">{cells}</tr>);\r\n                cells = [this.renderAddressHeader(a)];\r\n            }\r\n\r\n            const db = data[a];\r\n            if (!db) {\r\n                cells.push(<td className=\"db-gap\"></td>);\r\n            } else {\r\n                cells.push(<td className=\"db\">{U.formatU1Hex(db.data)}</td>);\r\n            }\r\n        }\r\n\r\n        if (cells.length > 1) {\r\n            rows.push(<tr className=\"code\">{cells}</tr>);\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    private renderAddressHeader(address: number): JSX.Element {\r\n        return <td className=\"table-header-h\">{U.formatU2Hex(address)}</td>;\r\n    }\r\n\r\n    private static readonly BYTES_PER_LINE = 16;\r\n}\r\n\r\nexport const DataBytesView = ReactRedux.connect(mapStateToProps)(DataBytesViewClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as A from \"../store/actions\";\r\nimport * as S from \"../store/state\";\r\nimport * as U from \"../../../shared/utilities\";\r\nimport * as SH from \"../../../shared/schemas\";\r\n\r\ninterface ConnectedProps {\r\n    asmView?: S.AsmView;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { asmView } = state;\r\n    return {\r\n        asmView\r\n    };\r\n}\r\n\r\ninterface ConnectedEvents {\r\n    onJumpToAsmLabel: (label: string) => void;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: ReactRedux.Dispatch<S.AppState>): ConnectedEvents {\r\n    return {\r\n        onJumpToAsmLabel: (label) => dispatch(A.createJumpToAsmLabelAction(label))\r\n    };\r\n}\r\n\r\nclass AsmViewClass extends React.Component<ConnectedProps & ConnectedEvents> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): JSX.Element | null {\r\n        const { asmView } = this.props;\r\n        if (!asmView) return null;\r\n\r\n        return (\r\n            <div id=\"asm-view\">\r\n                <h2>汇编代码</h2>\r\n                {this.renderAsmErrors()}\r\n                <table>\r\n                    <tbody>\r\n                        {this.renderAsmRows()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderAsmErrors(): JSX.Element {\r\n        const { asmView } = this.props;\r\n        const { asm } = asmView!;\r\n\r\n        let errors: string[] = [];\r\n        for (let key in asm) {\r\n            if ((asm[key] as SH.RealInstruction).error) {\r\n                errors.push((asm[key] as SH.RealInstruction).error!);\r\n            }\r\n        }\r\n        if (errors) {\r\n            return <p>{errors}</p>;\r\n        } else {\r\n            return <p></p>;\r\n        }\r\n    }\r\n\r\n    private renderAsmRows(): JSX.Element[] {\r\n        const { asmView } = this.props;\r\n        const { asm } = asmView!;\r\n        let rows: JSX.Element[] = [];\r\n        let lastInst: SH.Instruction | null = null;\r\n        for (let address in asm) {\r\n            const ci = asm[address];\r\n            if ((ci as SH.GapInstruction).isGap) {\r\n                rows.push(this.renderSeparatorRow(true));\r\n                rows.push(this.renderGapRow(ci as SH.GapInstruction));\r\n            } else if ((ci as SH.DbInstruction).isDb) {\r\n                if (lastInst && (\r\n                    (lastInst as SH.GapInstruction).isGap ||\r\n                    (lastInst as SH.RealInstruction).isAbsJump)) {\r\n                    rows.push(this.renderSeparatorRow(true));\r\n                }\r\n\r\n                if (!lastInst || !(lastInst as SH.DbInstruction).isDb) {\r\n                    rows.push(this.renderLabelRow(ci as SH.DbInstruction));\r\n                }\r\n                rows.push(this.renderDbRow(ci as SH.DbInstruction));\r\n            } else {\r\n                if (lastInst && (\r\n                    (lastInst as SH.DbInstruction).isDb ||\r\n                    (lastInst as SH.GapInstruction).isGap ||\r\n                    (lastInst as SH.RealInstruction).isAbsJump)\r\n                ) {\r\n                    rows.push(this.renderSeparatorRow(true));\r\n                } else if (lastInst && (\r\n                    (lastInst as SH.RealInstruction).isCall ||\r\n                    (lastInst as SH.RealInstruction).isCondJump\r\n                )) {\r\n                    rows.push(this.renderSeparatorRow(false));\r\n                } else if ((ci as SH.RealInstruction).jumpSource) {\r\n                    rows.push(this.renderSeparatorRow(false));\r\n                }\r\n\r\n                if ((ci as SH.RealInstruction).isIntEntry) {\r\n                    const n = (ci.address - 3) / 8;\r\n                    rows.push(this.renderTextRow(`; 中断入口 ${n}`));\r\n                }\r\n\r\n                if ((ci as SH.RealInstruction).jumpSource) {\r\n                    rows.push(this.renderLabelRow(ci as SH.RealInstruction));\r\n                }\r\n\r\n                rows.push(this.renderInstRow(ci as SH.RealInstruction));\r\n            }\r\n            lastInst = ci;\r\n        }\r\n        rows.push(this.renderSeparatorRow(true));\r\n        rows.push(this.renderTextRow(\"END\"));\r\n        return rows;\r\n    }\r\n\r\n    // 标号行： |          标号: |(空)                                    |\r\n    // 指令行： | 地址 | 字节数据 | 操作码 | 全部操作数的列表 | 注释或/和错误 |\r\n    // DB行： 同上\r\n    // 空白行： |---------------------------------------------------------|\r\n\r\n    private renderLabelRow(ci: SH.RealInstruction | SH.DbInstruction) {\r\n        const label = U.formatCodeAddress(ci.address);\r\n        return <tr className=\"code\">\r\n            <td colSpan={2} className=\"asm-label\" id={label}>\r\n                {label + \":\"}\r\n            </td>\r\n            <td colSpan={3}></td>\r\n        </tr>;\r\n    }\r\n\r\n    private renderGapRow(ci: SH.GapInstruction): JSX.Element {\r\n        return this.renderTextRow(`; ${ci.length} (${U.formatHex(ci.length, 0, true)}) 字节空白`);\r\n    }\r\n\r\n    private renderDbRow(ci: SH.DbInstruction): JSX.Element {\r\n        return (\r\n            <tr className=\"code\">\r\n                <td className=\"asm-addr\">{U.formatU2Hex(ci.address)}</td>\r\n                <td className=\"asm-db\">{this.renderDataBytes(ci.bytes)}</td>\r\n                <td className=\"asm-opcode\">{ci.opcode}</td>\r\n                <td className=\"asm-oprand\">{this.renderOprands(ci)}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    private renderInstRow(ci: SH.RealInstruction): JSX.Element {\r\n        return (\r\n            <tr className=\"code\">\r\n                <td className=\"asm-addr\">{U.formatU2Hex(ci.address)}</td>\r\n                <td className=\"asm-db\">{this.renderDataBytes(ci.bytes)}</td>\r\n                <td className=\"asm-opcode\">{ci.opcode}</td>\r\n                <td className=\"asm-oprand\">{this.renderOprands(ci)}</td>\r\n                <td>{ci.error}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    private renderSeparatorRow(isHard?: boolean): JSX.Element {\r\n        return (\r\n            <tr className=\"code\">\r\n                <td colSpan={5}>{isHard ? <hr /> : \" \"}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    private renderTextRow(text: string): JSX.Element {\r\n        return (\r\n            <tr className=\"code\">\r\n                <td colSpan={2}></td>\r\n                <td colSpan={3}>{text}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    private renderDataBytes(bytes: SH.DataByte[]): JSX.Element[] {\r\n        return bytes.map(v => <span>{U.formatU1Hex(v.data)}</span>);\r\n    }\r\n\r\n    private renderOprands(ci: SH.RealInstruction): JSX.Element[] {\r\n        let spans: JSX.Element[] = [];\r\n        if (ci.oprand1) {\r\n            spans.push(this.renderOprandSpan(ci.oprand1));\r\n            if (ci.oprand2) {\r\n                spans.push(<span>, </span>);\r\n            }\r\n        }\r\n        if (ci.oprand2) {\r\n            spans.push(this.renderOprandSpan(ci.oprand2));\r\n            if (ci.oprand3) {\r\n                spans.push(<span>, </span>);\r\n            }\r\n        }\r\n        if (ci.oprand3) {\r\n            spans.push(this.renderOprandSpan(ci.oprand3));\r\n        }\r\n        return spans;\r\n    }\r\n\r\n    private renderOprandSpan(oprand: SH.TypedOprand | SH.NamedOprandType): JSX.Element {\r\n        const { onJumpToAsmLabel } = this.props;\r\n\r\n        const str = this.getOprandStr(oprand);\r\n        const isAddr = (oprand as SH.TypedOprand).type === \"ADDR\";\r\n        return (\r\n            <span\r\n                className={isAddr ? \"asm-jmp-target\" : undefined}\r\n                onClick={isAddr ? () => onJumpToAsmLabel(str) : undefined}>\r\n                {str}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    private getOprandStr(oprand: SH.TypedOprand | SH.NamedOprandType): string {\r\n        if (!oprand) {\r\n            return \"\";\r\n        } else if (typeof (oprand) === \"string\") {\r\n            return oprand;\r\n        } else {\r\n            return (oprand as SH.TypedOprand).str;\r\n        }\r\n    }\r\n}\r\n\r\nexport const AsmView = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(AsmViewClass);","import * as React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport * as S from \"../store/state\";\r\n\r\ninterface ConnectedProps {\r\n    appInfo: S.AppInfo;\r\n}\r\n\r\nfunction mapStateToProps(state: S.AppState): ConnectedProps {\r\n    const { appInfo } = state;\r\n    return {\r\n        appInfo\r\n    };\r\n}\r\n\r\nclass PageFooterClass extends React.Component<ConnectedProps> {\r\n    public render(): JSX.Element {\r\n        const { appInfo } = this.props;\r\n        const { title, version, author, homepage, bugsUrl, releaseNotesUrl, buildTimeLocal, year, pageId } = appInfo;\r\n        const showDonate = pageId !== \"DONATE\";\r\n\r\n        return (\r\n            <footer id=\"app-footer\">\r\n                <div><strong>{title}</strong></div>\r\n                <div>&copy; {year} {author}</div>\r\n                <div>版本 {version}</div>\r\n                <div>{buildTimeLocal}</div>\r\n                <div><a href={`${releaseNotesUrl}#${version.replace(/\\./g, \"\")}`} target=\"_blank\">版本说明</a></div>\r\n                <div><a href=\"/latest\" target=\"_blank\">尝试新版</a></div>\r\n                <div><a href={homepage} target=\"_blank\">GitHub</a></div>\r\n                <div><a href={bugsUrl} target=\"_blank\">报bug</a></div>\r\n                {showDonate && (\r\n                    <div className=\"right\"><a href={\"?donate\"} target=\"_blank\">资助作者</a></div>\r\n                )}\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PageFooter = ReactRedux.connect(mapStateToProps)(PageFooterClass);","import * as Redux from \"redux\";\r\n\r\nimport * as A from \"./actions\";\r\nimport * as S from \"./state\";\r\n\r\nexport const actionListenerMiddleware = ((store: Redux.MiddlewareAPI<S.AppState>) => (next: Redux.Dispatch<S.AppState>) => (action: Redux.Action) => {\r\n    switch (action.type as A.ActionType) {\r\n        case \"OPEN_FILE\": {\r\n            const { appInfo } = store.getState();\r\n            const { file } = action as A.OpenFileAction;\r\n            document.title = `${file.name} - ${appInfo.title}`\r\n            break;\r\n        }\r\n        case \"JUMP_TO_ASM_LABEL\": {\r\n            const { label } = action as A.JumpToAsmLabelAction;\r\n            const elem = document.getElementById(label);\r\n            if (elem) {\r\n                elem.scrollIntoView();\r\n            }\r\n            break;\r\n        }\r\n        case \"SET_HEX\": {\r\n            window.addEventListener(\"beforeunload\", (evt) => {\r\n                if (!window.confirm(\"即将离开此页面，打开的文件将丢失。确定离开吗？\")) {\r\n                    evt.preventDefault();\r\n                    evt.returnValue = \"\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return next(action);\r\n}) as Redux.Middleware;\r\n","import * as Redux from \"redux\";\r\n\r\nimport * as A from \"./store/actions\";\r\nimport * as S from \"./store/state\";\r\nimport * as WM from \"../../shared/worker-message\";\r\n\r\nexport function initWorkerClient(store: Redux.Store<S.AppState>): void {\r\n    _store = store;\r\n    _worker = new Worker(\"worker.js\");\r\n    _worker.onmessage = ev => handleMessage(ev.data);\r\n}\r\n\r\nexport const workerClientMiddleware = ((store: Redux.MiddlewareAPI<S.AppState>) => (next: Redux.Dispatch<S.AppState>) => (action: Redux.Action) => {\r\n    switch (action.type) {\r\n        case \"OPEN_FILE\": {\r\n            const { file } = action as A.OpenFileAction;\r\n            postOpenFileMessage(file);\r\n            break;\r\n        }\r\n    }\r\n    return next(action);\r\n}) as Redux.Middleware;\r\n\r\nfunction postOpenFileMessage(file: File): void {\r\n    _worker.postMessage({ type: \"REQ_OPEN_FILE\", file } as WM.OpenFileMessage);\r\n}\r\n\r\nfunction handleMessage(msg: WM.Message): void {\r\n    switch (msg.type) {\r\n        case \"RES_PORGRESS\": handleProgressMessage(msg as WM.ProgressMessage); break;\r\n        case \"RES_HEX\": handleHexMessage(msg as WM.HexMessage); break;\r\n        case \"RES_DATA_BYTES\": handleDataBytesMessage(msg as WM.DataBytesMessage); break;\r\n        case \"RES_ASM\": handleAsmMessage(msg as WM.AsmMessage); break;\r\n    }\r\n}\r\n\r\nfunction handleProgressMessage(msg: WM.ProgressMessage): void {\r\n    const { progress, error } = msg;\r\n    _store.dispatch(A.createSetWorkerStatusAction(progress, error));\r\n}\r\n\r\nfunction handleHexMessage(msg: WM.HexMessage): void {\r\n    const { hex } = msg;\r\n    _store.dispatch(A.createSetHexAction(hex));\r\n}\r\n\r\nfunction handleDataBytesMessage(msg: WM.DataBytesMessage): void {\r\n    const { data } = msg;\r\n    _store.dispatch(A.createSetDataBytesAction(data));\r\n}\r\n\r\nfunction handleAsmMessage(msg: WM.AsmMessage): void {\r\n    const { asm } = msg;\r\n    _store.dispatch(A.createSetAsmAction(asm));\r\n}\r\n\r\nlet _worker: Worker;\r\nlet _store: Redux.Store<S.AppState>;"],"sourceRoot":""}